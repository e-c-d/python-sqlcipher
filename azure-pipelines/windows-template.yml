parameters:
- name: build_type
  type: string
  default: "Release"
- name: arch
  type: string
  default: "64"
- name: openssl_version_name
  type: string
  default: "1_1"
- name: openssl_version
  type: string
  default: ">=1.1,<1.2"

jobs:
- job:
  dependsOn: get_sources
  variables:
    buildname: "sqlcipher-python-ssl${{ parameters.openssl_version_name }}-\
      win${{ parameters.arch }}-${{ parameters.build_type }}"
    DOWNLOAD_CACHE_FOLDER: "$(Pipeline.Workspace)/.download_cache"
    SQLCIPHER_SHA512: "D80177CF658C145F7328BAFAC14BC2779AFA463FC94EF0A5E99B6654CF2EECE3088AC296949130E7263F52948913FFEAC253C47E33D91816E90CAF1788301A9A"
    SQLCIPHER_URL: "https://github.com/sqlcipher/sqlcipher/archive/v4.4.3.tar.gz"

  displayName: "Build sqlcipher \
    with OpenSSL ${{ parameters.openssl_version_name }} \
    for architecture ${{ parameters.arch }}, \
    build type ${{ parameters.build_type }}"
  pool:
    vmImage: 'windows-2019'

  steps:
  - script: |
      dir /a-D /S /B .
    displayName: List files

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'download\sqlcipher.tar.gz'
      destinationFolder: 'tmp-source'
      cleanDestinationFolder: true
    displayName: Extract

  - powershell: |
      Get-ChildItem -Path tmp-source\sqlcipher-* | Move-Item -Destination sqlcipher
    displayName: Rename

  - powershell: |
      write-host "##vso[task.complete result=Failed;]exit early because testing"
    displayName: oooops

  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars${{ parameters.arch }}.bat"
      cd sqlcipher
      md build
      cd build
      set CC=cl.exe
      set CXX=cl.exe
      set OPTS= ^
        -DSQLITE_TEMP_STORE=2 ^
        -DSQLITE_HAS_CODEC=1 ^
        ^
        -DSQLITE_ENABLE_COLUMN_METADATA=1 ^
        -DSQLITE_ENABLE_DBSTAT_VTAB=1 ^
        -DSQLITE_ENABLE_FTS3=1 ^
        -DSQLITE_ENABLE_FTS3_PARENTHESIS=1 ^
        -DSQLITE_ENABLE_FTS3_TOKENIZER=1 ^
        -DSQLITE_ENABLE_FTS4=1 ^
        -DSQLITE_ENABLE_FTS5=1 ^
        -DSQLITE_ENABLE_JSON1=1 ^
        -DSQLITE_ENABLE_LOAD_EXTENSION=1 ^
        -DSQLITE_ENABLE_PREUPDATE_HOOK=1 ^
        -DSQLITE_ENABLE_RTREE=1 ^
        -DSQLITE_ENABLE_SESSION=1 ^
        -DSQLITE_ENABLE_STAT4=1 ^
        -DSQLITE_ENABLE_STMTVTAB=1 ^
        -DSQLITE_ENABLE_UNLOCK_NOTIFY=1 ^
        -DSQLITE_ENABLE_UPDATE_DELETE_LIMIT=1 ^
        -DSQLITE_HAVE_ISNAN=1 ^
        -DSQLITE_LIKE_DOESNT_MATCH_BLOBS=1 ^
        -DSQLITE_MAX_SCHEMA_RETRY=50 ^
        -DSQLITE_MAX_VARIABLE_NUMBER=250000 ^
        -DSQLITE_OMIT_LOOKASIDE=1 ^
        -DSQLITE_SECURE_DELETE=1 ^
        -DSQLITE_SOUNDEX=1 ^
        -DSQLITE_TEMP_STORE=1 ^
        -DSQLITE_THREADSAFE=1 ^
        -DSQLITE_USE_URI=1 ^
        ^
        -I%CONDA_PREFIX%\Library\include

      set NMAKE_OPTS=NO_TCL=1 USE_CRT_DLL=1 WIN32HEAP=1 ^
        LTLIBPATHS=^"/LIBPATH:%CONDA_PREFIX%\Library\lib^" ^
        LTLIBS=^"%NMAKE_LTLIBS%^"

      nmake /f ..\makefile.msc sqlite3.c TOP=.. %NMAKE_OPTS%
      nmake /f ..\makefile.msc sqlite3.dll TOP=.. %NMAKE_OPTS%
      nmake /f ..\makefile.msc sqlite3.exe TOP=.. %NMAKE_OPTS%
      rem nmake /f ..\makefile.msc test TOP=.. %NMAKE_OPTS%
    displayName: Build sqlcipher

  - script: |
      dir /a-D /S /B sqlcipher
    displayName: List built files

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        sqlcipher/build/sqlite3?(.exe|.dll|.pdb|.lib|.exp|.manifest|.h)
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
      flattenFolders: true
    displayName: Copy files to artifact staging directory

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: "$(buildname)"
    displayName: Publish build artifacts

  # - powershell: |
  #     . $Env:CONDAPS1
  #     conda activate chihiro
  #     New-Item -Name build -ItemType directory
  #     cmake -G "NMake Makefiles" -B build -DCMAKE_BUILD_TYPE=Release
  #     cmake --build build
